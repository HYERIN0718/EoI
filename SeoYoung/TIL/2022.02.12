TIL 새로 시작합니다...



-------------------- 노션 Markdown - CKA Networking

# → 명령어 요약 (문제풀이)

# Explore Environments

```python
**>> How many nodes are part of this cluster?**
kubectl get node

**>> What is the Internal IP address of the controlplane node in this cluster?**
kubectl describe node controlplane

**>> What is the network interface configured for cluster connectivity on the master node? node-to-node communication.
✅✅✅**
# Internal IP를 알아낸 다음,
ip a | grep -B2 10.10.32.3
(ip a | grep 10.10.32.3)

**>> What is the MAC address of the interface on the master node?**
ip link show eth0

**>> What is the IP address assigned to node01?**
kubectl describe node node01
# internal IP

**>> node01의 MAC address는 ?**
arp node01
# arp controlplane 은 왜 안될까?

**>> We use Docker as our container runtime. What is the interface/bridge created by Docker on this host?**
ip link # docker 0

**>> What is the state of the interface docker0?**
ip link show docker0

**>> If you were to ping google from the master node, which route does it take?**
**What is the IP address of the Default Gateway?**
ip route show default

**>> What is the port the kube-scheduler is listening on in the controlplane node?**
netstat -nplt | grep scheduler

**>> Notice that ETCD is listening on two ports. Which of these have more client connections established?**
netstat -anp | grep etcd

```

# CNI Weave

```python
**>> Inspect the kubelet service and identify the network plugin configured for Kubernetes.✅**
ps -aux | grep kubelet 
답은 CNI

**>> What is the path configured with all binaries of CNI supported plugins?✅**
답은 /opt/cni/bin
위 명령어에서 --cni-bin-directory 옵션에도 나와 있음.

**>> Identify which of the below plugins is not available in the list of available CNI plugins on this host?**
cd /opt/cni/bin
ls
(==ls /opt/cni/bin)

**>> What is the CNI plugin configured to be used on this kubernetes cluster?✅**
ls /etc/cni/net.d/

**>> What binary executable file will be run by kubelet after a container and its associated namespace are created.**
답은 flannel
위 문제에서 나온 파일을 확인해보면 됨.
예를 들어 /etc/cni/net.d/ 에 10-weave.conflist 파일이 있으면,
cat 10-weave.conflist
# 이 파일에서 type 확인
```

# Deploy Network Solution

```python
In this practice test we will install **weave-net POD networking solution** to the cluster. 
Let us first inspect the setup.

**>> We have deployed an application called app in the default namespace. What is the state of the pod?**
kubectl get pods # Not Running (Container Creating)

**>> Inspect why the POD is not running.**
kubectl describe pod app
# No Network configured
# networkPlugin cni failed to set up pod "app_default" network: unable to allocate IP address:

**>> Deploy weave-net networking solution to the cluster.
Replace the default IP address and subnet of weave-net to the 10.50.0.0/16. ✅✅✅✅✅
Please check the official weave installation and configuration guide which is available at the top right panel.**

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
kubectl get pods -n kube-system
```

# Networking Weave

```python
**>> How many Nodes are part of this cluster? Including master and worker nodes.**
kubectl get nodes

**>> What is the Networking Solution used by this cluster?✅✅**
cd /etc/cni/net.d/
ls

>> How many weave agents/peers are deployed in this cluster?✅
kubectl get pods -n kube-system

**>> On which nodes are the weave peers present?**
kubectl get pods -n kube-system -o wide
# One on every node

**>> Identify the name of the bridge network/interface created by weave on each node.**✅✅✅
ip link | grep weave
ip addr show weave
# weave ?

**>> What is the POD IP address range configured by weave?**
ip addr show weave
10.X.X.X

**>> What is the default gateway configured on the PODs scheduled on node01?✅✅✅✅✅
Try scheduling a pod on node01 and check ip route output**.
kuectl run busybox --image=busybox --dry-run=client -o yaml > pod.yaml
vi pod.yaml
---
spec:
  nodeName: node03
---
kubectl apply -f pod.yaml
kubectl exec -ti busybox --sh
# Once we are inside a container running on the pod
ip r  
#
10.50.192.0
```

# Service Networking

```python
**>> What network range are the nodes in the cluster part of?✅✅✅** 
# 힌트 : Run the command: ip addr and look at the IP address assigned to the eth0 interfaces. 
# Derive network range from that.
kubectl get nodes -o wide
ip addr | grep eth0
답은 10.10.240.0/24
////// 강의 다시 듣기.

**>> What is the range of IP addresses configured for PODs on this cluster?**✅✅✅
kubectl get pods -n kube-system
kubectl logs weave-net-2sntr weave -n kube-system # 아래 사진 참고

**>> What is the IP Range configured for the services within the cluster?**✅✅✅✅✅
cd /etc/kubernetes/manfiests/
ls
vi kube-apiserver.yaml
## --service-cluster-ip-range 옵션 찾기
답은 10.96.0.0/12

**>> How many kube-proxy pods are deployed in this cluster?**
kubectl get pods -n kube-system

**>> What type of proxy is the kube-proxy configured to use? ✅✅**
kubectl get pods -n kube-system
kubectl logs kube-proxy-2wvxz -n kube-system | grep proxy

**>> How does this Kubernetes cluster ensure that a kube-proxy pod runs on all nodes in the cluster?
Inspect the kube-proxy pods and try to identify how they are deployed.**
kubectl describe pod kube-proxy-2wvxz -n kube-system
답은 using DaemonSet
```

![kubectl logs weave-net-2sntr weave -n kube-system](%E2%86%92%20%E1%84%86%E1%85%A7%E1%86%BC%E1%84%85%E1%85%A7%E1%86%BC%E1%84%8B%E1%85%A5%20%E1%84%8B%E1%85%AD%E1%84%8B%E1%85%A3%E1%86%A8%20(%E1%84%86%E1%85%AE%E1%86%AB%E1%84%8C%E1%85%A6%E1%84%91%E1%85%AE%E1%86%AF%E1%84%8B%E1%85%B5)%20e69aec83445b46a790aefea22c583cf8/Untitled.png)

kubectl logs weave-net-2sntr weave -n kube-system

# CoreDNS in Kubernetes

```python

```

# Ingress Networking-1

```python

```

# Ingress Networking-2

```python

```
